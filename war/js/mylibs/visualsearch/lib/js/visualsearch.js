// This is the annotated source code for
// [VisualSearch.js](http://documentcloud.github.com/visualsearch/),
// a rich search box for real data.
// 
// The annotated source HTML is generated by
// [Docco](http://jashkenas.github.com/docco/).

/** @license VisualSearch.js 0.1.0
 *  (c) 2011 Samuel Clay, @samuelclay, DocumentCloud Inc.
 *  VisualSearch.js may be freely distributed under the MIT license.
 *  For all details and documentation:
 *  http://documentcloud.github.com/visualsearch
 */

(function() {

  var $ = jQuery; // Handle namespaced jQuery

  // Setting up VisualSearch globals. These will eventually be made instance-based.
  if (!window.VS) window.VS = {};
  if (!VS.app)    VS.app    = {};
  if (!VS.ui)     VS.ui     = {};
  if (!VS.model)  VS.model  = {};
  if (!VS.utils)  VS.utils  = {};

  // Sets the version for VisualSearch to be used programatically elsewhere.
  VS.VERSION = '0.1.0';

  // Entry-point used to tie all parts of VisualSearch together. It will either attach
  // itself to `options.container`, or pass back the `searchBox` so it can be rendered
  // at will.
  VS.init = function(options) {
    var defaults = {
      container   : '',
      query       : '',
      unquotable  : [],
      callbacks   : {
        search          : $.noop,
        focus           : $.noop,
        facetMatches    : $.noop,
        valueMatches    : $.noop
      }
    };
    VS.options           = _.extend({}, defaults, options);
    VS.options.callbacks = _.extend({}, defaults.callbacks, options.callbacks);

    VS.app.hotkeys.initialize();
    VS.app.searchQuery   = new VS.model.SearchQuery();
    VS.app.searchBox     = new VS.ui.SearchBox(options);

    if (options.container) {
      var searchBox = VS.app.searchBox.render().el;
      $(options.container).html(searchBox);
    }
    VS.app.searchBox.value(options.query || '');

    // Disable page caching for browsers that incorrectly cache the visual search inputs.
    // This is forced the browser to re-render the page when it is retrieved in its history.
    $(window).bind('unload', function(e) {});

    // Gives the user back a reference to the `searchBox` so they
    // can use public methods.
    return VS.app.searchBox;
  };

})();